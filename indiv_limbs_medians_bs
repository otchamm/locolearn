function indiv_limbs_medians_bs(param, param_label, animal_names, limbs, x, data, colors, shading, exp_name, path)

median_path = fullfile(path, '\Median');
create_folder_path(median_path);

%Only include data from animals in experiment
n_animals = numel(animal_names);
animal_indexes = find(ismember(data.animals, animal_names));

% Calculate baseline median
baseline_trials = 1:data.session_info.first_split-1;
for a = 1:n_animals
    baseline(a,:) = nanmedian(data.regular.med.(param)(baseline_trials, :, animal_indexes(a)));
end

% Determine what the split sessions are (if there are any)
if ~isnan(data.session_info.first_split)
    split_sessions = [data.session_info.first_split-0.5 data.session_info.last_split+0.5];
else
    split_sessions = [];
end

% Calculate the baseline substracted y data for the animal and parameter in question
for i = 1:n_animals
    y(:,:,i) = data.regular.med.(param)(:,:,animal_indexes(i)) - baseline(i,:);
end

% Calculate median and IQR
median_limbs = nanmedian(y, 3);
mad_limbs = mad(y, 0, 3);

%Plot everything on a single plot
fig = figure('Position', [680 450 300 450]); %, 'Visible', 'off');
for lb = 1:length(limbs)
    plot(x, median_limbs(:,limbs(lb)), colors{limbs(lb)}, 'LineWidth', 2); hold on;
    fill_between(x, median_limbs(:,limbs(lb)), mad_limbs(:,limbs(lb)), shading{limbs(lb)});
end

% Add dotted line at y = 0
  yline(0, '--k', 'LineWidth', 0.5);

% Add dotted lines at beginning and end of split trials
for i = 1:length(split_sessions)
    xline(split_sessions(i), '--k', 'LineWidth', 0.5);
end

%Set x axis min and max
x_min = 0;
x_max = length(x) + 0.5;
xlim([x_min, x_max]);

%Set y axis min and max
if strcmp(param, 'coo_body')
    ylim([-8 8]);
elseif strcmp(param, 'step_length')
    ylim([-15 15]);
elseif strcmp(param, 'phase_st_HL') || strcmp(param, 'phase_st_HR')
    ylim([-10 8]);
elseif strcmp(param, 'double_support')
    ylim([-15 15]);
    set(gca, 'YDir', 'reverse');
end

%Label x and y axes
plotlabel=axes(fig,'visible','off');
plotlabel.XLabel.Visible = 'on';
plotlabel.YLabel.Visible='on';
xlabel(plotlabel, 'Trials');
ylabel(plotlabel, param_label);

yLabelHandle = get(gca, 'ylabel');

% Adjust the position of the y-label
currentPosition = get(yLabelHandle, 'Position');
newPosition = currentPosition + [0.0165, 0, 0];  % Move x units to the left
set(yLabelHandle, 'Position', newPosition);

%Label graph title
n_animals = num2str(length(animal_names));
annotation('textbox', [0.5, 1, 0, 0], 'String', strcat(exp_name), 'HorizontalAlignment', 'center', 'FontSize', 11, 'FontWeight', 'bold');
annotation('textbox', [0.7, 0.8, 0.1, 0.1], 'String', ['n = ', n_animals], 'FitBoxToText', 'on', 'EdgeColor', 'none');

saveas(fig, fullfile(median_path, [exp_name, ' median ', param, ' limb comparisons', '.png']));
saveas(fig, fullfile(median_path, [exp_name, ' median ', param, ' limb comparisons', '.fig']));

close(fig);

end
